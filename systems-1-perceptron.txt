JMP main

radius: DW 40
cpos_y:  DW 10
cpos_x:  DW 10
pos_y: 	DW 10
pos_x: 	DW 10
i:		DW 0
j: 		DW 0

; -----------------------------------------------------------------------
; function draw_circle_segment()
; -----------------------------------------------------------------------
draw_circle_segment:
	MOV A , [j]
	CMP A , [radius]
    JA draw_circle_segment_return
    MOV B , [pos_y]
    MOVB AH , BL
    MOV B , [pos_x]
    MOVB AL , BL
    OUT 8
    MOV A , 255
    OUT 9
    MOV A , [pos_x]
    INC A
    MOV [pos_x] , A
    MOV A , [j]
    INC A
    MOV [j] , A
    JMP draw_circle_segment
draw_circle_segment_return:
	MOV [j] , 0
	RET

; -----------------------------------------------------------------------
; function draw_circle()
; -----------------------------------------------------------------------
draw_circle:
	MOV A , 2
    OUT 7
    MOV A , 3
    OUT 7
draw_circle_loop:
	MOV A , [i]
	CMP A , [radius]
    JA draw_circle_end_loop
    MOV A , [cpos_y]
    MOV [pos_x] , A
    CALL draw_circle_segment
    MOV A , [pos_y]
    INC A
    MOV [pos_y] , A
    MOV A , [i]
    INC A
    MOV [i] , A
    JMP draw_circle_loop
draw_circle_end_loop:
	MOV [i] , 0
	RET

; -----------------------------------------------------------------------
; function draw_line_segment()
; -----------------------------------------------------------------------
draw_line_segment:
	MOV A , [j]
	CMP A , [radius]
    JA draw_line_segment_return
    MOV B , [pos_y]
    MOVB AH , BL
    MOV B , [pos_x]
    MOVB AL , BL
    OUT 8
    MOV A , 255
    OUT 9
    MOV A , [pos_x]
    INC A
    MOV [pos_x] , A
    MOV A , [j]
    INC A
    MOV [j] , A
    JMP draw_line_segment
draw_line_segment_return:
	MOV [j] , 0
	RET

; -----------------------------------------------------------------------
; function draw_rect()
; -----------------------------------------------------------------------
draw_rect:
	MOV A , 2
    OUT 7
    MOV A , 3
    OUT 7
draw_rect_loop:
	MOV A , [i]
	CMP A , [radius]
    JA draw_rect_end_loop
    MOV A , [cpos_y]
    MOV [pos_x] , A
    CALL draw_line_segment
    MOV A , [pos_y]
    INC A
    MOV [pos_y] , A
    MOV A , [i]
    INC A
    MOV [i] , A
    JMP draw_rect_loop
draw_rect_end_loop:
	MOV [i] , 0
	RET
    
; -----------------------------------------------------------------------
; function init()
; ----------------------------------------------------------------------- 
; SCREEN SIZE: 255 x 255
; RANDOM RANGE: 255 - RADIUS
; 
;
init:
	IN 10
    MOV C , A
    RET

main:
	MOV SP , 0x0FFF
    CALL init
	CALL draw_rect
	HLT
